{
  "$schema": "https://json.schemastore.org/eslintrc.json",
  "env": {
    "browser": false,
    "es2021": true,
    "node": true
  },
  "extends": [
    "plugin:prettier/recommended",
    "plugin:jsx-a11y/recommended",
    "next/core-web-vitals"
  ],
  "plugins": ["unused-imports", "import", "jsx-a11y", "prettier", "headers"],
  "parserOptions": {
    "ecmaFeatures": {
      "impliedStrict": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "no-console": "error",
    "jsx-a11y/no-autofocus": "warn",
    "prettier/prettier": "error",
    "no-unused-vars": "off",
    "unused-imports/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "headers/header-format": [
      "error",
      {
        "source": "string",
        "style": "jsdoc",
        "content": "Tasktix: A powerful and flexible task-tracking tool for all.\nCopyright (C) {year} Nate Baird & other Tasktix contributors\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.",
        "variables": {
          "year": "2025"
        },
        "trailingNewlines": 2
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "type",
          "builtin",
          "object",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "@/**",
            "group": "internal",
            "position": "before"
          }
        ],
        "newlines-between": "always"
      }
    ],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      }
    ]
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],
      "plugins": ["@typescript-eslint"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["./tsconfig.json", "./cypress/tsconfig.json"]
      },
      "rules": {
        "@typescript-eslint/no-unsafe-assignment": "warn", // Creating problems for Jest mocks
        "@typescript-eslint/no-unsafe-member-access": "warn", // Creating problems for Jest mocks
        "@typescript-eslint/no-unsafe-argument": "warn", // Creating problems for Jest mocks
        "@typescript-eslint/no-unsafe-return": "warn", // Creating problems for Jest mocks
        "@typescript-eslint/no-unsafe-call": "warn", // Creating problems for Jest mocks
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "args": "after-used",
            "ignoreRestSiblings": false,
            "argsIgnorePattern": "^_.*?$"
          }
        ],
        "@typescript-eslint/switch-exhaustiveness-check": "error"
      }
    },
    {
      "files": ["**/*.tsx"],
      "extends": ["plugin:react/recommended", "plugin:react-hooks/recommended"],
      "plugins": ["react"],
      "parserOptions": {
        "ecmaFeatures": {
          "jsx": true
        }
      },
      "rules": {
        "react/prop-types": "off", // Using TypeScript for type checking
        "react/react-in-jsx-scope": "off", // Not needed with React 17+
        "react/self-closing-comp": "error",
        "react/jsx-sort-props": [
          "error",
          {
            "callbacksLast": true,
            "shorthandFirst": true,
            "noSortAlphabetically": false,
            "reservedFirst": true
          }
        ]
      }
    },
    {
      "files": ["**/*.test.ts"],
      "extends": ["plugin:jest/recommended"]
    }
  ]
}
